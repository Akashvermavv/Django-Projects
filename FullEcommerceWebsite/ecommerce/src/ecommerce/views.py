from django.http import HttpResponse,JsonResponsefrom django.shortcuts import render,redirectfrom .forms import ContactForm,LoginForm,RegisterFormfrom django.contrib.auth import login,authenticate,logout,get_user_modelfrom products.models import Productfrom django.core import serializersfrom category.models import Categoriesimport jsonfrom carts.models import Cartdef  category_wise(request):    # def get(self,request,*args,**kwargs):    print('category_wise  --->')    if request.is_ajax():        print('ajax call in ProductCategoryWise ')        data = request.POST        print('post data is ---',data)        category_ids = data.getlist('category[]',None)        min_val = float(data.get('min_v',None))        max_val = float(data.get('max_v',None))        # if product_id is not None:        #     product_id = int(product_id)        #     ownership_ids = ProductPurchase.objects.products_by_id(request)        #     if product_id in ownership_ids:        #         return JsonResponse({'owner':True})        print('category_ids --',category_ids,min_val,max_val)        objs = Product.objects.filter(price__range=(min_val,max_val),category__name__in = category_ids)        # objs_ll = Product.objects.values()        objs_ll = objs        objs_ll = list(objs_ll.values())        for e in objs_ll:            for k,v in e.items():                e[k] = str(v)        print('objs_ll -->',objs_ll)        cart_obj, new_obj = Cart.objects.new_or_get(request)        product_details =[]        print('step 1')        is_auth = request.user.is_authenticated        print('step 2')        for e in objs:            id=e.id            name = e.title            price = e.price            image = e.image            is_digital = e.is_digital            product_in_cart =  e in cart_obj.products.all()            d1 ={'name':name,'price':int(price),'image':image.url,'is_digital':is_digital,'absolute_url':e.get_absolute_url(),                 'product_in_cart':product_in_cart,'is_authenticated':is_auth,'id':id                 }            product_details.append(d1)        print('objs ********** --,',product_details)        data = {'objs': product_details,'objs_ll':objs_ll,'count':objs.count()}        # data = {'objs':serializers.serialize('json', product_details)}        # data = {'objs':product_details}        print('data @@@--->',data)        # print('objs @@@--,',JsonResponse(data,safe=False))        return JsonResponse(data,safe=False)    # raise Http404    return HttpResponse('hello all')def home_page(request):    # if request.session.session_key is None:    #     return redirect('login')    # or    # if not request.user.is_authenticated:    #     return redirect('login')    print('value of session name value in home is ',request.session.get('name','unknown'))    # return HttpResponse("<h1>Hello world</h1>")    context ={        "title":"Hello World",        "content":"Welcome to the homepage.",        "products":Product.objects.all()    }    print('context in ecommerce urls --',context)    if request.user.is_authenticated:        context['premium_content'] = '$$ Premium content $$'    return render(request,'home_page.html',context)def about_page(request):    # return HttpResponse("<h1>Hello world</h1>")    context ={        "title":"About",        "content":"Welcome to the About page.",    }    return render(request,'home_page.html',context)def contact_page(request):    # return HttpResponse("<h1>Hello world</h1>")    contact_form = ContactForm(request.POST or None)    context ={        "title":"Contact Page",        "content":"Welcome to the Contact page.",        "form":contact_form,        # "brand":"new brand name"    }    # if request.method == 'POST':    #     print('POST data --',request.POST)    #     # print('get data --',request.POST)    #     # print('get data --',request.GET)    #     print(request.POST.get('fullname'))    #     print('####',request.POST.get('email'))    #     print('@@@@',request.POST.get('content'))    if contact_form.is_valid():        print('form clean data --',contact_form.cleaned_data)        if request.is_ajax():            return JsonResponse({"message":"Thank you for your message"})    if contact_form.errors:        print('form error data --',contact_form.errors)        errors = contact_form.errors.as_json()        if request.is_ajax():            return HttpResponse(errors,status=400,content_type='application/json')    return render(request,'contact/views.html',context)